apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "appname" . }}
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  name: {{ template "fullname" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "appname" . }}
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    spec:
      containers:
      - name: {{ .Chart.Name }}
        command: ["yarn"]
        args: ["start"]
        envFrom:
        - configMapRef:
            name: {{ template "fullname" . }}
        - secretRef:
            name: {{ template "fullname" . }}
        env:
        - name: PORT
          value: {{ .Values.service.port | quote }}
        - name: BUCKET_NAME
          value: storage.item.market
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: "{{ .Values.service.name }}"
          containerPort: {{ .Values.service.port }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 15
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 3
        resources:
{{ toYaml .Values.resources | indent 12 }}
      restartPolicy: Always
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 10 }}
